import numpy as np
from math import *
#from pycse import bvp
import matplotlib.pyplot as plt
from numpy import *

timestop = 1.25e-6
u = 1.0
ut = u*timestop

line512 = loadtxt('LinePlot512.txt')
x512   = line512[:,0]
rho512 = line512[:,1]
n = size(line512[:,0])

error512 = 0.0

for i in arange(0,n,1):
        x = x512[i]
        rhoexact = 0.01*exp(-100.0*((x-ut)-0.5)**2)
        error512 = error512 + (rho512[i]-rhoexact)**2
	#plt.plot(x,rhoexact,'o')
#plt.plot(x512,rho512,'sk',fillstyle='none',markersize=5)
#plt.show()

error512 = (error512/n)**0.5
print error512
#exit()


line256 = loadtxt('LinePlot256.txt')
x256   = line256[:,0]
rho256 = line256[:,1]
n = size(line256[:,0])

error256 = 0.0

for i in arange(0,n,1):
        x = x256[i]
        rhoexact = 0.01*exp(-100.0*((x-ut)-0.5)**2)
        error256 = error256 + (rho256[i]-rhoexact)**2
	#plt.plot(x,rhoexact,'o')
#plt.plot(x256,rho256)
#plt.show()
#exit()



error256 = (error256/n)**0.5
print error256

line128 = loadtxt('LinePlot128.txt')
x128   = line128[:,0]
rho128 = line128[:,1]
n = size(line128[:,0])

error128 = 0.0

for i in arange(0,n,1):
        x = x128[i]
        rhoexact = 0.01*exp(-100.0*((x-ut)-0.5)**2)
        error128 = error128 + (rho128[i]-rhoexact)**2
	#plt.plot(x,rhoexact,'o')
#plt.plot(x128,rho128)
#plt.show()
#exit()

error128 = (error128/n)**0.5
print error128

line64 = loadtxt('LinePlot064.txt')
x64   = line64[:,0]
rho64 = line64[:,1]
n = size(line64[:,0])

error64 = 0.0

for i in arange(0,n,1):
        x = x64[i]
        rhoexact = 0.01*exp(-100.0*((x-ut)-0.5)**2)
        error64 = error64 + (rho64[i]-rhoexact)**2

error64 = (error64/n)**0.5
print error64

line32 = loadtxt('LinePlot032.txt')
x32   = line32[:,0]
rho32 = line32[:,1]
n = size(line32[:,0])

error32 = 0.0

for i in arange(0,n,1):
        x = x32[i]
        rhoexact = 0.01*exp(-100.0*((x-ut)-0.5)**2)
        error32 = error32 + (rho32[i]-rhoexact)**2

error32 = (error32/n)**0.5
print error32
#exit()


line16 = loadtxt('LinePlot016.txt')
x16   = line16[:,0]
rho16 = line16[:,1]
n = size(line16[:,0])

error16 = 0.0

for i in arange(0,n,1):
        x = x16[i] 
        rhoexact = 0.01*exp(-100.0*((x-ut)-0.5)**2)
        error16 = error16 + (rho16[i]-rhoexact)**2

error16 = (error16/n)**0.5
print error16

dx = zeros(6)
error = zeros(6)

dx[0] = 1.0/16
dx[1] = 1.0/32
dx[2] = 1.0/64
dx[3] = 1.0/128
dx[4] = 1.0/256
dx[5] = 1.0/512

error[0] = error16
error[1] = error32
error[2] = error64
error[3] = error128
error[4] = error256
error[5] = error512

plt.loglog(1/dx[:],error[:],'or',markersize=10)


slope = zeros([2,2])

slope[0,0] = 10**1.1
slope[0,1] = 10**(-7.1)
slope[1,0] = 10**2.1
slope[1,1] = 10**(-8.7)

plt.plot(slope[:,0],slope[:,1],'k')

plt.title('Order of accuracy screwup',fontsize=30)


plt.show()


